<ServerManagerConfiguration>
	<ProxyGroup name="views">
		<!-- Register the view using the corresponding class. -->
		<RenderViewProxy name="StuproView"
			class="vtkPVStuproView"
			label="Kronos View"
			processes="client|renderserver|dataserver"
			base_proxygroup="views"
			base_proxyname="RenderView">

		<!--
		Adds a button to the property-panel to switch the display mode.
		The command-attribute has to be a method in the view-class.
		-->
		<Property name="SwitchCurrentDisplaymode"
			animateable="1"
			command="switchCurrentDisplayMode" />
    </RenderViewProxy>
  </ProxyGroup>
  
  <ProxyGroup name="representations">
  <RepresentationProxy name="MySpecialRepresentation"
	class="vtkMySpecialRepresentation"
	processes="client|renderserver|dataserver"
	base_proxygroup="representations"
	base_proxyname="SurfaceRepresentation">
	<Documentation>
	  This is the new representation type we are adding. This is identical to
	  the SurfaceRepresentation except that we are overriding the mapper with
	  our mapper.
	</Documentation>
	
  <!-- End of MySpecialRepresentation -->
  </RepresentationProxy>

  <Extension name="GeometryRepresentation">
	<Documentation>
	  Extends standard GeometryRepresentation by adding
	  MySpecialRepresentation as a new type of representation.
	</Documentation>

	<!-- this adds to what is already defined in PVRepresentationBase -->
	<RepresentationType subproxy="MySpecialRepresentation"
	  text="Special Mapper" subtype="Surface" />

	<SubProxy>
	  <Proxy name="MySpecialRepresentation"
		proxygroup="representations" proxyname="MySpecialRepresentation">
	  </Proxy>
	  <ShareProperties subproxy="SurfaceRepresentation">
		<Exception name="Input" />
		<Exception name="Visibility" />
		<Exception name="Representation" />
	  </ShareProperties>
	</SubProxy>
  </Extension>
</ProxyGroup>
</ServerManagerConfiguration>
